name: Installation precess testing

on:
  push:
    branches:
      - tmp
env:
  INSTALLATION_URL: 'https://raw.githubusercontent.com/wuchuheng/dotfiles/tmp/src/tools/install.sh'  # Set a global environment variable
  GIT_REP_URL: 'https://github.com/wuchuheng/dotfiles.git'
  GIT_VERSION: 'v0.0.45'
  SUCCESSFUL_LOG: 'echo "\033[0;32mPASS\033[0m %s\n"'

jobs:
#  curl_download_on_centOS:
#    runs-on: ubuntu-latest
#    name: curl download on CentOS
#    strategy:
#      matrix:
#        centos: [ 'centos:centos8.4.2105', 'centos:centos8' ]
#    env:
#      CENTOS_VERSION: ${{ matrix.centos }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a successful download by curl
#        run: |
#          docker run --rm -v $PWD:/workdir -w /workdir ${CENTOS_VERSION} bash -c "
#            cd /etc/yum.repos.d/ && rm -rf * .??* && cd -
#            cat .github/workflows/CentOS-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
#            cat /etc/yum.repos.d/CentOS-Base.repo
#            rm -rf * .??*
#            curl -fsSL ${INSTALLATION_URL} | bash
#            ls -ahl
#          "
#          lsCount=$(ls dotfiles/ | wc -c)
#          echo "ls count: ${lsCount}"
#          [ "${lsCount}" -eq 0 ] && exit 1
#          echo "${SUCCESSFUL_LOG}"
  #
  #      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a failed download by curl
#        run: |
#          docker run --rm -v $PWD:/workdir -w /workdir ${CENTOS_VERSION} bash -c "
#            cd /etc/yum.repos.d/ && rm -rf * .??* && cd -
#            cat .github/workflows/CentOS-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
#            cat /etc/yum.repos.d/CentOS-Base.repo
#            rm -rf * .??*
#            yum remove -y curl
#            curl -fsSL ${INSTALLATION_URL} | bash
#          "
#          lsCount=$(ls dotfiles/ | wc -c)
#          echo "ls count: ${lsCount}"
#          [ "${lsCount}" -eq 0 ] && exit 0
#          echo "${SUCCESSFUL_LOG}"
  #
  #  wget_download_on_centOS:
#    runs-on: ubuntu-latest
#    name: wget download on CentOS
#    strategy:
#      matrix:
#        centos: [ 'centos:centos8.4.2105', 'centos:centos8' ]
#    env:
#      CENTOS_VERSION: ${{ matrix.centos }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a successful download by wget
#        run: |
#          docker run --rm -v $PWD:/workdir -w /workdir ${CENTOS_VERSION} bash -c "
#            cd /etc/yum.repos.d/ && rm -rf * .??* && cd -
#            cat .github/workflows/CentOS-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
#            cat /etc/yum.repos.d/CentOS-Base.repo
#            rm -rf /usr/bin/curl # remove curl
#            yum install -y wget
#            rm -rf * .??*
#            wget -O- ${INSTALLATION_URL} | bash
#            ls -ahl
#          "
#          lsCount=$(ls dotfiles/ | wc -c)
#          echo "ls count: ${lsCount}"
#          [ "${lsCount}" -eq 0 ] && exit 1
#          echo "${SUCCESSFUL_LOG}"
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a failed download by wget
#        run: |
#          docker run --rm -v $PWD:/workdir -w /workdir ${CENTOS_VERSION} bash -c "
#            cd /etc/yum.repos.d/ && rm -rf * .??* && cd -
#            cat .github/workflows/CentOS-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
#            cat /etc/yum.repos.d/CentOS-Base.repo
#            rm -rf /usr/bin/curl # remove curl
#            command -v "wget"
#            [ -f /usr/bin/wget ] && rm -f /usr/bin/wget
#            rm -rf * .??*
#            wget -O- ${INSTALLATION_URL} | bash
#            ls -ahl
#          "
#          lsCount=$(ls dotfiles/ | wc -c)
#          echo "ls count: ${lsCount}"
#          [ "${lsCount}" -eq 0 ] || exit 1
#          echo "${SUCCESSFUL_LOG}"
  #
  #  git_download_on_centOS:
#    runs-on: ubuntu-latest
#    name: wget download on CentOS
#    strategy:
#      matrix:
#        centos: [ 'centos:centos8.4.2105', 'centos:centos8' ]
#    env:
#      CENTOS_VERSION: ${{ matrix.centos }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a successful download by git
#        run: |
#          docker run --rm -v $PWD:/workdir -w /workdir ${CENTOS_VERSION} bash -c "
#            cd /etc/yum.repos.d/ && rm -rf * .??* && cd -
#            cat .github/workflows/CentOS-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
#            cat /etc/yum.repos.d/CentOS-Base.repo
#            rm -rf /usr/bin/curl # remove curl
#            yum install -y git
#            rm -rf * .??*
#            git clone --branch ${GIT_VERSION} --single-branch --recurse-submodules ${GIT_REP_URL} && cd dotfiles
#            ls -ahl
#          "
#          lsCount=$(ls dotfiles/ | wc -c)
#          echo "ls count: ${lsCount}"
#          [ "${lsCount}" -eq 0 ] && exit 1
#          echo "${SUCCESSFUL_LOG}"
#
#  curl_download_on_macOS_x86:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a successful download by curl
#        run: |
#          curl -fsSL ${INSTALLATION_URL} | bash
#
#  wget_download_on_macOS_x86:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a successful download by wget
#        run: |
#          wget -O- ${INSTALLATION_URL} | bash
#  git_download_on_macOS_x86:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Asserting the result of a successful download by git
#        run: |
#          git clone --branch ${GIT_VERSION} --single-branch --recurse-submodules ${GIT_REP_URL} && cd dotfiles

  curl_download_on_ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [ 'ubuntu:23.10']
    env:
      UBUNTU_IMAGE_VERSION: ${{ matrix.image}}

    steps:
      - name: Successful curl download on ubuntu
        run: |
          docker run --rm -v $PWD:/workdir -w /workdir ${UBUNTU_IMAGE_VERSION} bash -c "
            apt update;
            apt install -y curl;
            curl -fsSL ${INSTALLATION_URL} | bash;
          "
          lsCount=$(ls dotfiles/ | wc -c)
          echo "ls count: ${lsCount}"
          [ "${lsCount}" -gt 0 ] || exit 1
          echo "${SUCCESSFUL_LOG}"
      - name: Failed curl download on ubuntu
        run: |
          rm -rf * .??*
          docker run --rm -v $PWD:/workdir -w /workdir ${UBUNTU_IMAGE_VERSION} bash -c "
            curl -fsSL ${INSTALLATION_URL} | bash;
          "
          lsCount=$(ls dotfiles/ | wc -c)
          echo "ls count: ${lsCount}"
          [ "${lsCount}" -eq 0 ] || exit 1
          echo "${SUCCESSFUL_LOG}"

  wget_download_on_ubuntu:
    name: wget download on ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [ 'ubuntu:23.10']
    env:
      UBUNTU_IMAGE_VERSION: ${{ matrix.image }}

    steps:
      - name: Successful wget download on ubuntu
        run: |
          docker run --rm -v $PWD:/workdir -w /workdir ${UBUNTU_IMAGE_VERSION} bash -c "
            apt update;
            apt install -y wget;
            wget -O- ${INSTALLATION_URL} | bash
          "
          lsCount=$(ls dotfiles/ | wc -c)
          echo "ls count: ${lsCount}"
          [ "${lsCount}" -gt 0 ] || exit 1
          echo "${SUCCESSFUL_LOG}"
      - name: Failed wget download on ubuntu
        run: |
          rm -rf * .??*
          docker run --rm -v $PWD:/workdir -w /workdir ${UBUNTU_IMAGE_VERSION} bash -c "
            apt update;
            wget -O- ${INSTALLATION_URL} | bash
          "
          lsCount=$(ls dotfiles/ | wc -c)
          echo "ls count: ${lsCount}"
          [ "${lsCount}" -eq 0 ] || exit 1
          echo "${SUCCESSFUL_LOG}"
