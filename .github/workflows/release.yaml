name: Release the project.

on:
  push:
    tags:
      - v*

jobs:
#  unit_test_on_centos:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Run commands on CentOS 8
#        run: |
#          docker pull centos:centos8.4.2105
#          docker run --rm -v $PWD:/workdir -w /workdir centos:8 bash -c "
#          rm -rf /etc/yum.repos.d/*
#          cat .github/workflows/CentOS-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
#          cat /etc/yum.repos.d/CentOS-Base.repo
#          ls -ahl /etc/yum.repos.d/*
#          yum install -y make zsh
#          make unit_test
#          "
#
#  installation_on_centos:
#    needs: unit_test_on_centos
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Run commands on CentOS 8
#        run: |
#          docker pull centos:centos8.4.2105
#          docker run --rm -v $PWD:/workdir -w /workdir centos:8 bash -c "
#          rm -rf /etc/yum.repos.d/*
#          cat .github/workflows/CentOS-Base.repo > /etc/yum.repos.d/CentOS-Base.repo
#          cat /etc/yum.repos.d/CentOS-Base.repo
#          ls -ahl /etc/yum.repos.d/*
#          yum install -y make zsh git
#          git submodule update --init
#          make install
#          "
#  unit_test_on_ubuntu:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Install zsh
#        run: sudo apt install -y zsh
#      - name: start the unit tests
#        run: make unit_test
#
#  installation_on_ubuntu:
#    needs: unit_test_on_ubuntu
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Install zsh
#        run: sudo apt install -y zsh
#      - name: update submodules
#        run: git submodule update --init
#      - name: start the unit tests
#        run: make install
#
#  unit_test_on_macos_x86:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Install zsh
#        run: brew install zsh
#      - name: start the unit tests
#        run: make unit_test
#
#  installation_on_macos_x86:
#    needs: unit_test_on_macos_x86
#    runs-on: macos-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Install zsh
#        run: brew install zsh
#      - name: update submodules
#        run: git submodule update --init
#      - name: start the unit tests
#        run: make install

  release:
#    needs:
#      - installation_on_ubuntu
#      - installation_on_macos_x86
#      - installation_on_centos
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: fetch all submodule
        run: git submodule update --init
      - name: Set tar file name
        id: vars
        run: | 
          projectName=$(basename $PWD)
          echo "TAR_FILE=${projectName}-${GITHUB_REF#refs/tags/}.tar.gz" >> $GITHUB_ENV
          echo "ZIP_FILE=${projectName}-${GITHUB_REF#refs/tags/}.zip" >> $GITHUB_ENV

      - name: Create Release Archive
        run: |
          tarFile=../${TAR_FILE}
          tar -zcvf ${tarFile} .
          zipFile=../${ZIP_FILE}
          zip -r ${zipFile} ./
          mv ${zipFile} .
          mv ${tarFile} .
      - name: Set change log
        run: |
          echo "version: ${GITHUB_REF#refs/tags/}"
          .github/workflows/get_change_log.sh "${GITHUB_REF#refs/tags/}" > CHANGELOG.md
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.TAR_FILE }},${{ env.ZIP_FILE }}"
          bodyFile: "CHANGELOG.md"

#  macos-arm:
#    runs-on: macos-11.0
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Run commands on macOS ARM
#        run: |
#          make show_os_type
